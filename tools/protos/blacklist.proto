syntax="proto3";
option go_package = "zorrero/blacklist";

service Blacklist {
  rpc GetBlacklistRecord(BlacklistRecordOperationRequest) returns (BlacklistRecordDto);
  rpc GetBlacklistRecordBatch(stream BlacklistBatchRequest) returns (stream BlacklistRecordDto);
  rpc GetBlacklistRecordsQuery(BlacklistRecordQueriesRequest) returns (stream BlacklistRecordDto);
  rpc GetBlacklistRecordsBetweenQuery(BlacklistRecordBetweenQueriesRequest) returns (stream BlacklistRecordDto);
  rpc SaveBlacklistRecord(BlacklistRecordOperationRequest) returns (BlacklistRecordDto);
  rpc SaveBlacklistRecordBatch(stream BlacklistBatchRequest) returns (stream BlacklistRecordDto);
  rpc DeleteBlacklistRecord(BlacklistRecordOperationRequest) returns (Empty);
  rpc DeleteBatchBlacklistRecord(stream BlacklistBatchRequest) returns (Empty);
}

message Empty {}

message BlacklistRecordDto {
  string record_id = 1;
  string client_id = 2;
  string product_id = 3;
  string added_date = 4;
}

message BlacklistRecordOperationRequest {
  string record_id = 1;
  string client_id = 2;
  string product_id = 3;
}

message BlacklistBatchRequest {
  repeated BlacklistRecordOperationRequest requests = 1;
}

//Get operations

message BlacklistRecordQueriesRequest {
  repeated BlacklistRecordQueryRequest queries = 1;
}

message BlacklistRecordBetweenQueriesRequest {
  repeated BlacklistRecordBetweenRequest queries = 1;
}

message BlacklistRecordQueryRequest {
  SupportedQueryField field = 1;
  SupportedQueryOperation operation = 2;
  string value = 3;
}

message BlacklistRecordBetweenRequest {
  SupportedQueryField field = 1;
  string init = 2;
  string end = 3;
}

enum SupportedQueryField {
  RECORD_ID = 0;
  CLIENT_ID = 1;
  PRODUCT_ID = 2;
  ADDED_DATE = 4;
}

enum SupportedQueryOperation {
  EQUALS = 0;
  GREATER_THAN = 1;
  LESSER_THAN = 2;
  BEGINS_WITH = 3;
}