syntax="proto3";
option go_package = "zorrero/blacklist";

service Blacklist {
  rpc GetBlacklistRecord(BlacklistRecordOperationRequest) returns (BlacklistRecordDto);
  rpc GetBlacklistRecordBatch(stream BlacklistBatchRequest) returns (stream BlacklistRecordDto);
  rpc GetBlacklistRecordByRecordId(BlacklistRecordGetByRecordIdRequest) returns (stream BlacklistRecordDto);
  rpc GetBlacklistRecordByClientId(BlacklistRecordGetByClientIdRequest) returns (stream BlacklistRecordDto);
  rpc GetBlacklistRecordByClientIdAndProductId(BlacklistRecordGetByClientIdAndProductIdRequest) returns (stream BlacklistRecordDto);
  rpc GetBlacklistRecordByAddedDate(BlacklistRecordGetByAddedDateRequest) returns (stream BlacklistRecordDto);
  rpc SaveBlacklistRecord(BlacklistRecordOperationRequest) returns (BlacklistRecordDto);
  rpc SaveBlacklistRecordBatch(stream BlacklistBatchRequest) returns (stream BlacklistRecordDto);
  rpc DeleteBlacklistRecord(BlacklistRecordOperationRequest) returns (BlacklistRecordDto);
  rpc DeleteBatchBlacklistRecord(stream BlacklistBatchRequest) returns (stream BlacklistRecordDto);
}

message BlacklistRecordDto {
  string record_id = 1;
  string client_id = 2;
  string product_id = 3;
  string added_date = 4;
}

message BlacklistRecordOperationRequest {
  string record_id = 1;
  string client_id = 2;
  string product_id = 3;
}

message BlacklistBatchRequest {
  repeated BlacklistRecordOperationRequest requests = 1;
}

//Get operations

message BlacklistRecordGetByRecordIdRequest {
  string record_id = 1;
}

message BlacklistRecordGetByClientIdRequest {
  string client_id = 1;
}

message BlacklistRecordGetByClientIdAndProductIdRequest {
  string client_id = 1;
  string product_id = 2;
}

message BlacklistRecordGetByAddedDateRequest {
  string init_date = 1;
  string end_date = 2;
}